VDG – Plain Commentary (v2)
===========================
What changed
------------
• Pivoted from Excel Add-in to a stand-alone CLI on modern .NET.
• Generation uses Visio Desktop (COM) on x64; viewing uses Visio for the web.
• We will not use the legacy “Visio Viewer” (ActiveX/IE-mode).
• Environment baselined on .NET 9 (Windows), with optional net8.0-windows multitargeting.

Why the pivot
-------------
• Simpler installation and testing (no VSTO manifest/registration).
• Cleaner separation of concerns (sources feed a JSON IR; CLI does the rendering).
• COM automation remains the only first-party path to *create* .vsdx robustly.
• Visio for the web excels at viewing/sharing/embedding once the .vsdx exists.

Environment baseline
--------------------
• OS: Windows 11/10 x64
• .NET: net9.0-windows primary (STS); optional net8.0-windows (LTS)
• Office: Microsoft® Visio® 2024 MSO (Version 2507 Build 16.0) 64-bit or newer
• Process: x64, STA thread for COM

Acceptance gates for this phase
-------------------------------
1) Repository scaffolding in place:
   - src/VDG.Core (contracts) – netstandard2.0
   - src/VDG.Runtime.Visio (COM adapter) – net9.0-windows
   - src/VDG.CLI (driver) – net9.0-windows
   - tests/VDG.Tests – net9.0 (with FakeVisioService shell)
   - archive/VDG_Excel_Add-in – disabled
2) Output path convention agreed:
   C:\Users\justu\OneDrive - Black Scottie Chai\Solution Notes\VDG-<UTC>-<GuidN>.vsdx
3) No business logic implemented yet; only structure + references.
4) A single Update_Team_ChatGPT.md is maintained per session.

Risks & mitigations
-------------------
• COM interop availability – mitigated by dev-box requirement checks and test doubles in CI.
• Stencil availability – document minimum stencil set (Basic Shapes) and validate at runtime.
• Web link automation – optional/flagged (Graph), deferred until core generation is green.

Next steps (when green-lit)
---------------------------
• Create empty projects + references exactly per VDG_folder_structure UPDATED v3.json.
• Implement FakeVisioService + unit tests.
• Implement minimal Visio adapter (drop 2 nodes + connector + layout + save).
• (Optional) Add WebView2 preview or Graph upload.
