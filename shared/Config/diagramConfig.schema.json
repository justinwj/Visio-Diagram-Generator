{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://visio-diagram-generator/schema/diagram.schema.json",
  "title": "Visio Diagram Generator Envelope",
  "type": "object",
  "required": [ "nodes" ],
  "additionalProperties": false,
  "properties": {
    "diagramType": {
      "type": "string",
      "description": "High-level diagram category (e.g., ServiceArchitecture, ProcessFlow)."
    },
    "schemaVersion": {
      "type": "string",
      "description": "Semantic version of the envelope. Current version: 1.2"
    },
    "layout": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "orientation": {
          "type": "string",
          "enum": ["horizontal", "vertical"],
          "default": "horizontal",
          "description": "Overall flow orientation. Only 'horizontal' is acted upon in the current milestone."
        },
        "tiers": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Ordered list of lane/tier names to place from left-to-right (for horizontal)."
        },
        "spacing": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "horizontal": { "type": "number", "minimum": 0.1, "description": "Horizontal gap between columns (inches)." },
            "vertical": { "type": "number", "minimum": 0.1, "description": "Vertical gap between nodes in a column (inches)." }
          },
          "description": "Spacing configuration for layout (inches)."
        },
        "page": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "widthIn": { "type": "number", "minimum": 1 },
            "heightIn": { "type": "number", "minimum": 1 },
            "marginIn": { "type": "number", "minimum": 0 },
            "paginate": { "type": "boolean" },
            "errorOnOverflow": { "type": "boolean", "description": "If true, throw an error when a single node cannot fit the usable page height." }
          },
          "description": "Page settings and pagination preferences (milestone 2)."
        },
        "routing": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "mode": {
              "type": "string",
              "enum": ["orthogonal", "straight"],
              "description": "Preferred connector style (M3 stub)."
            },
            "bundleBy": {
              "type": "string",
              "enum": ["lane", "group", "nodePair", "none"],
              "description": "How to group related edges for bundling (M3 stub)."
            },
            "bundleSeparationIn": { "type": "number", "minimum": 0, "description": "Gap between parallel bundled edges in inches (M3 stub)." },
            "channels": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "gapIn": { "type": "number", "minimum": 0, "description": "Reserved corridor gap between lanes, inches (M3 stub)." }
              }
            },
            "routeAroundContainers": { "type": "boolean", "description": "Prefer to route connectors around lane containers (M3 stub)." }
          },
          "description": "Routing configuration for connectors (milestone 3 stub only)."
        },
        "containers": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "paddingIn": { "type": "number", "minimum": 0, "default": 0.3, "description": "Padding around containers (inches)." },
            "cornerIn": { "type": "number", "minimum": 0, "default": 0.12, "description": "Corner rounding radius (inches)." },
            "style": { "$ref": "#/$defs/style" }
          },
          "description": "Container rendering configuration (milestone 4)."
        },
        "diagnostics": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": { "type": "boolean", "default": true },
            "pageHeightThresholdIn": { "type": "number", "minimum": 1 },
            "laneMaxNodes": { "type": "integer", "minimum": 1 },
            "level": { "type": "string", "enum": ["info", "warning", "error"], "description": "Minimum level to emit diagnostics." },
            "laneCrowdWarnRatio": { "type": "number", "minimum": 0, "maximum": 1 },
            "laneCrowdErrorRatio": { "type": "number", "minimum": 0, "maximum": 1 },
            "pageCrowdWarnRatio": { "type": "number", "minimum": 0, "maximum": 1 },
            "crossingsWarn": { "type": "integer", "minimum": 0 },
            "crossingsError": { "type": "integer", "minimum": 0 },
            "utilizationWarnMin": { "type": "number", "minimum": 0, "maximum": 100 },
            "emitJson": { "type": "boolean" },
            "jsonPath": { "type": "string" }
          },
          "description": "Diagnostics and hint thresholds for rendering."
        }
      }
    },
    "metadata": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "title": { "type": "string" },
        "description": { "type": "string" },
        "version": { "type": "string" },
        "author": { "type": "string" },
        "createdUtc": { "type": "string", "format": "date-time" },
        "tags": {
          "type": "array",
          "items": { "type": "string" }
        },
        "properties": {
          "type": "object",
          "additionalProperties": { "type": "string" }
        }
      }
    },
    "nodes": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/node" }
    },
    "edges": {
      "type": "array",
      "items": { "$ref": "#/$defs/edge" },
      "default": []
    },
    "containers": {
      "type": "array",
      "items": { "$ref": "#/$defs/container" },
      "default": [],
      "description": "Optional explicit sub-containers inside tiers (milestone 4)."
    },
    "styleMap": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "shape": { "type": "string" },
          "color": { "type": "string" },
          "masterId": { "type": "string" }
        },
        "additionalProperties": false
      },
      "description": "Reserved for future type-to-style mappings (stub only in 1.2)."
    }
  },
  "$defs": {
    "point": {
      "type": "object",
      "required": ["x", "y"],
      "additionalProperties": false,
      "properties": {
        "x": { "type": "number" },
        "y": { "type": "number" }
      }
    },
    "size": {
      "type": "object",
      "required": [ "width", "height" ],
      "additionalProperties": false,
      "properties": {
        "width": { "type": "number", "exclusiveMinimum": 0 },
        "height": { "type": "number", "exclusiveMinimum": 0 }
      }
    },
    "style": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "fill": {
          "type": "string",
          "pattern": "^#([0-9a-fA-F]{6}|[0-9a-fA-F]{8})$",
          "description": "Hex colour in #RRGGBB or #AARRGGBB format."
        },
        "stroke": {
          "type": "string",
          "pattern": "^#([0-9a-fA-F]{6}|[0-9a-fA-F]{8})$",
          "description": "Stroke colour in hex format."
        },
        "linePattern": {
          "type": "string",
          "description": "Optional Visio line pattern or formula."
        }
      }
    },
    "metadata": {
      "type": "object",
      "additionalProperties": { "type": "string" }
    },
    "node": {
      "type": "object",
      "required": [ "id", "label" ],
      "additionalProperties": false,
      "properties": {
        "id": { "type": "string", "minLength": 1 },
        "label": { "type": "string", "minLength": 1 },
        "type": { "type": "string" },
        "tier": { "type": "string", "description": "Lane/tier the node belongs to (e.g., External, Edge, Services, Data)." },
        "ports": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "inSide": { "type": "string", "enum": ["auto", "left", "right", "top", "bottom"], "default": "auto" },
            "outSide": { "type": "string", "enum": ["auto", "left", "right", "top", "bottom"], "default": "auto" }
          },
          "description": "Hints for which side connectors should enter/exit (M3 stub)."
        },
        "groupId": { "type": "string" },
        "containerId": { "type": "string", "description": "Explicit container membership (milestone 4)." },
        "size": { "$ref": "#/$defs/size" },
        "style": { "$ref": "#/$defs/style" },
        "metadata": { "$ref": "#/$defs/metadata" }
      }
    },
    "edge": {
      "type": "object",
      "required": [ "sourceId", "targetId" ],
      "additionalProperties": false,
      "properties": {
        "id": { "type": "string" },
        "sourceId": { "type": "string", "minLength": 1 },
        "targetId": { "type": "string", "minLength": 1 },
        "label": { "type": "string" },
        "directed": { "type": "boolean" },
        "style": { "$ref": "#/$defs/style" },
        "metadata": { "$ref": "#/$defs/metadata" },
        "waypoints": {
          "type": "array",
          "items": { "$ref": "#/$defs/point" },
          "description": "Optional explicit polyline waypoints (M3 stub)."
        },
        "priority": { "type": "number", "description": "Routing hint to break ties; higher routes first (M3 stub)." }
      }
    },
    "container": {
      "type": "object",
      "required": [ "id", "label", "tier" ],
      "additionalProperties": false,
      "properties": {
        "id": { "type": "string", "minLength": 1 },
        "label": { "type": "string", "minLength": 1 },
        "tier": { "type": "string", "description": "Tier this container belongs to." },
        "bounds": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "x": { "type": "number" },
            "y": { "type": "number" },
            "width": { "type": "number", "exclusiveMinimum": 0 },
            "height": { "type": "number", "exclusiveMinimum": 0 }
          },
          "description": "Optional explicit bounds in layout coordinates (inches). If omitted, bounds are computed from member nodes."
        },
        "style": { "$ref": "#/$defs/style" },
        "metadata": { "$ref": "#/$defs/metadata" }
      },
      "description": "Explicit sub-container definition (milestone 4)."
    }
  }
}
